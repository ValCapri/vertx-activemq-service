<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.ithempel.vertx</groupId>
	<artifactId>mod-activemq-io</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<name>Vert.x module to communicate with ActiveMQ / JMS</name>

	<inceptionYear>2014</inceptionYear>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>
	<organization>
		<name>IT-Consulting Hempel</name>
		<url>http://www.it-hempel.de/</url>
	</organization>
	<developers>
		<developer>
			<id>shempel</id>
			<name>Sebastian Hempel</name>
			<email>shempel@it-hempel.de</email>
			<organization>IT-Consulting Hempel</organization>
			<organizationUrl>http://www.it-hempel.de/</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>Europe/Berlin (UTC+01:00)</timezone>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.7</maven.compiler.source>
		<maven.compiler.target>1.7</maven.compiler.target>
		<asciidoclet.version>1.5.0</asciidoclet.version>

		<!--Set pullInDeps to true if you want any modules specified in the 'includes' 
			and 'deploys' fields in your mod.json to be automatically pulled in during 
			packaging and added inside your module. Doing this means your module won't 
			download and install those dependencies at run-time when they're first requested. -->
		<vertx.pullInDeps>false</vertx.pullInDeps>

		<!--Set createFatJar to true if you want to create a fat executable jar 
			which contains the Vert.x binaries along with the module so it can be run 
			with java -jar <jarname> -->
		<vertx.createFatJar>false</vertx.createFatJar>

		<!--Vertx module name -->
		<module.name>${project.groupId}~${project.artifactId}~${project.version}</module.name>

		<!--The directory where the module will be assembled - you can override 
			this on the command line with -Dmods.directory=mydir -->
		<mods.directory>target/mods</mods.directory>

		<!--Dependency versions -->
		<vertx.version>2.1.4</vertx.version>
		<vertx.testtools.version>2.0.3-final</vertx.testtools.version>
		<junit.version>4.11</junit.version>

		<!--Plugin versions -->
		<maven.compiler.plugin.version>3.0</maven.compiler.plugin.version>
		<maven.resources.plugin.version>2.6</maven.resources.plugin.version>
		<maven.clean.plugin.version>2.5</maven.clean.plugin.version>
		<maven.vertx.plugin.version>2.0.10-final</maven.vertx.plugin.version>
		<maven.surefire.plugin.version>2.14</maven.surefire.plugin.version>
		<maven.failsafe.plugin.version>2.14</maven.failsafe.plugin.version>
		<maven.surefire.report.plugin.version>2.14</maven.surefire.report.plugin.version>
		<maven.javadoc.plugin.version>2.9</maven.javadoc.plugin.version>
		<maven.dependency.plugin.version>2.7</maven.dependency.plugin.version>
	</properties>

	<dependencies>
		<!--Vertx provided dependencies -->
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
			<version>${vertx.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-platform</artifactId>
			<version>${vertx.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-hazelcast</artifactId>
			<version>${vertx.version}</version>
			<scope>provided</scope>
		</dependency>
		<!--Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.10.8</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>testtools</artifactId>
			<version>${vertx.testtools.version}</version>
			<scope>test</scope>
		</dependency>
		<!--other dependencies -->
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-all</artifactId>
			<version>5.10.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- The vert.x Maven plugin -->
			<plugin>
				<groupId>io.vertx</groupId>
				<artifactId>vertx-maven-plugin</artifactId>
				<version>${maven.vertx.plugin.version}</version>
				<!-- You can specify extra config to the plugin as required here <configuration> 
					<configFile>/path/to/MyVerticle.conf</configFile> <instances>1</instances> 
					<classpath>src/main/resources/:src/test/resources/:target/classes/:target/test-classes/</classpath> 
					</configuration> -->
				<!-- Make sure that the plugin uses the vert.x versions from this pom.xml 
					not from its own pom.xml -->
				<dependencies>
					<dependency>
						<groupId>io.vertx</groupId>
						<artifactId>vertx-platform</artifactId>
						<version>${vertx.version}</version>
					</dependency>
					<dependency>
						<groupId>io.vertx</groupId>
						<artifactId>vertx-core</artifactId>
						<version>${vertx.version}</version>
					</dependency>
					<dependency>
						<groupId>io.vertx</groupId>
						<artifactId>vertx-hazelcast</artifactId>
						<version>${vertx.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>PullInDeps</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>pullInDeps</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Other plugins required by the build -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
				<executions>
					<execution>
						<id>copy-mod-to-target</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${mods.directory}/${module.name}</outputDirectory>
							<resources>
								<resource>
									<directory>target/classes</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.dependency.plugin.version}</version>
				<executions>
					<execution>
						<id>copy-mod-dependencies-to-target</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${mods.directory}/${module.name}/lib</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
					<execution>
						<id>copy-mod-dependencies-to-target-dependencies</id>
						<phase>process-classes</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>target/dependencies</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<includes>
						<include>**/unit/*Test*.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.failsafe.plugin.version}</version>
				<configuration>
					<systemProperties>
						<property>
							<name>vertx.mods</name>
							<value>${mods.directory}</value>
						</property>
					</systemProperties>
					<includes>
						<include>**/integration/**/*Test*</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.report.plugin.version}</version>
				<executions>
					<execution>
						<id>generate-test-report</id>
						<phase>test</phase>
						<goals>
							<goal>report-only</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-integration-test-report</id>
						<phase>integration-test</phase>
						<goals>
							<goal>failsafe-report-only</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin.version}</version>
                <configuration>
                    <aggregate>true</aggregate>
                    <source>1.7</source>
                    <doclet>org.asciidoctor.Asciidoclet</doclet>
                    <docletArtifact>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoclet</artifactId>
                        <version>${asciidoclet.version}</version>
                    </docletArtifact>
                    <overview>src/main/java/overview.adoc</overview>
                    <additionalparam>
                        --base-dir ${project.basedir}
                        --attribute "name=${project.name}"
                        --attribute "version=${project.version}"
                        --attribute "title-link=http://example.com[${project.name} ${project.version}]"
                    </additionalparam>
                </configuration>
            </plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/mod.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>assemble</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.report.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<configuration>
					<aggregate>true</aggregate>
					<source>1.7</source>
					<doclet>org.asciidoctor.Asciidoclet</doclet>
					<docletArtifact>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoclet</artifactId>
						<version>${asciidoclet.version}</version>
					</docletArtifact>
					<overview>src/main/java/overview.adoc</overview>
					<additionalparam>
						--base-dir ${project.basedir}
						--attribute "name=${project.name}"
						--attribute "version=${project.version}"
						--attribute "title-link=http://example.com[${project.name} ${project.version}]"
					</additionalparam>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
</project>